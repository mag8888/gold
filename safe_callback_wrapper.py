#!/usr/bin/env python3
"""
–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–±–µ—Ä—Ç–∫–∞ –¥–ª—è callback.answer() 
–î–æ–±–∞–≤–ª—è–µ—Ç –≤ –Ω–∞—á–∞–ª–æ bot.py —Ñ—É–Ω–∫—Ü–∏—é-–æ–±–µ—Ä—Ç–∫—É
"""

def add_safe_callback_wrapper():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω—É—é –æ–±–µ—Ä—Ç–∫—É –¥–ª—è callback –≤ bot.py"""
    
    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    with open('bot.py', 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –§—É–Ω–∫—Ü–∏—è-–æ–±–µ—Ä—Ç–∫–∞
    wrapper_code = '''
async def safe_callback_answer(callback, text=None):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–±–µ—Ä—Ç–∫–∞ –¥–ª—è callback.answer() —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫"""
    try:
        if text:
            await callback.answer(text)
        else:
            await callback.answer()
    except Exception as e:
        # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö callback-–∑–∞–ø—Ä–æ—Å–æ–≤
        logger.warning(f"Callback answer error (ignored): {e}")

'''
    
    # –ò—â–µ–º –º–µ—Å—Ç–æ –ø–æ—Å–ª–µ –∏–º–ø–æ—Ä—Ç–æ–≤ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ —Ñ—É–Ω–∫—Ü–∏–∏
    import_end = content.find('# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã')
    if import_end == -1:
        import_end = content.find('# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è')
    
    if import_end != -1:
        # –í—Å—Ç–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ—Å–ª–µ –∏–º–ø–æ—Ä—Ç–æ–≤
        new_content = content[:import_end] + wrapper_code + content[import_end:]
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
        with open('bot.py', 'w', encoding='utf-8') as f:
            f.write(new_content)
        
        print("‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–±–µ—Ä—Ç–∫–∞ –¥–ª—è callback –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
        print("üìù –¢–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: await safe_callback_answer(callback, '—Ç–µ–∫—Å—Ç')")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –º–µ—Å—Ç–æ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ —Ñ—É–Ω–∫—Ü–∏–∏")

if __name__ == "__main__":
    add_safe_callback_wrapper()

